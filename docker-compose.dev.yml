# Development containers, these should only be used if you are developing.
version: '3'
services:
  db:
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    ports:
      - '54321:5432'
    environment:
      - POSTGRES_PASSWORD=wrolpi
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]

  videos:
    depends_on:
      - db
    build:
      context: .
      dockerfile: modules/videos/Dockerfile
    volumes:
      - './main.py:/opt/wrolpi/main.py'
      - './wrolpi:/opt/wrolpi/wrolpi'
      - './videos:/opt/wrolpi/services/videos'
      - './config:/opt/wrolpi/config'
    ports:
      - ${REACT_APP_API-127.0.0.1:8081}:8081
    command: "-vv api --host 0.0.0.0"
    healthcheck:
      test: [ 'CMD-SHELL', 'curl http://127.0.0.1:8081/api/echo' ]
    user: "${UID-1000}:${GID-1000}"

  app:
    depends_on:
      - videos
      - inventory
      - otp
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - '8082:8082'
    volumes:
      - './app:/app'
    command: "yarn start"
    stdin_open: true
    healthcheck:
      test: [ "CMD-SHELL", "curl http://127.0.0.1:3000" ]
    user: "${UID-1000}:${GID-1000}"

  otp:
    build:
      context: .
      dockerfile: modules/otp/Dockerfile
    ports:
      - '8083:8081'
    volumes:
      - './main.py:/opt/wrolpi/main.py'
      - './wrolpi:/opt/wrolpi/wrolpi'
      - './otp:/opt/wrolpi/services/otp'
      - './config:/opt/wrolpi/config'
    healthcheck:
      test: [ 'CMD-SHELL', 'curl http://127.0.0.1:8081/api/echo' ]
    user: "${UID-1000}:${GID-1000}"

  inventory:
    depends_on:
      - db
    build:
      context: .
      dockerfile: modules/inventory/Dockerfile
    ports:
      - '8084:8081'
    volumes:
      - './main.py:/opt/wrolpi/main.py'
      - './wrolpi:/opt/wrolpi/wrolpi'
      - './inventory:/opt/wrolpi/services/inventory'
      - './config:/opt/wrolpi/config'
    healthcheck:
      test: [ 'CMD-SHELL', 'curl http://127.0.0.1:8081/api/echo' ]
    user: "${UID-1000}:${GID-1000}"

  web:
    depends_on:
      - app
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    ports:
      - ${WEB_HOST-0.0.0.0}:${WEB_PORT-8080}:80
    volumes:
      - './nginx.dev.conf:/etc/nginx/nginx.conf'
      - './icon.ico:/etc/nginx/favicon.ico'
      - './icon.png:/etc/nginx/icon.png'
      - './test:/opt/media'
    healthcheck:
      test: [ 'CMD-SHELL', 'curl http://127.0.0.1:80' ]
